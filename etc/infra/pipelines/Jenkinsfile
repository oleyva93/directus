pipeline {
    agent any
    parameters { 
        string(name: 'COMMIT', defaultValue: '', description: 'Enter the commit hash or branch name that you would like to build & deploy.')
        choice(name: 'ENVIRONMENT', choices: ['dev', 'prod'], description: 'Choose the environment you want to deploy to.')
        string(name: 'IMAGE_ID', defaultValue: 'NONE', description: 'Enter a known image id you want to deploy. Leave default to build and deploy a new one.')
    }
     environment {
        CODEBUILD_PROJECT     = 'general-codebuild-dev'
    }
    options {
        parallelsAlwaysFailFast()
}
    stages {
        stage('Setup') {
            steps{
            echo "DEBUG: parameter COMMIT = ${params.COMMIT}"
            echo "DEBUG: parameter ENVIRONMENT = ${params.ENVIRONMENT}"
            echo "DEBUG: env value CODEBUILD_PROJECT = ${CODEBUILD_PROJECT}"
            script {
                if ( COMMIT != '') {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: params.COMMIT]],
                        userRemoteConfigs: scm.userRemoteConfigs,
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'SubmoduleOption',
                            disableSubmodules: false,
                            parentCredentials: true,
                            recursiveSubmodules: false,
                            reference: '',
                            trackingSubmodules: false
                        ]]
                        ])  
                    echo "Checked out commit ${params.COMMIT}"
                } else {
                    echo "! Please provide a commit hash or branch name for the pipeline. Build is stopping now."
                    error("! Build failed because commit hash or branch name not found.")
                    }
                }
            }
        } // end stage Setup
        stage('Build') {
            environment { 
                BUILDSPEC_FILE = 'etc/infra/pipelines/buildstep.yaml' 
            }
            steps {
                echo "### starting stage Build ###"
                echo "CodeBuild project name: ${CODEBUILD_PROJECT}"
                echo "BUILDSPEC_FILE: ${BUILDSPEC_FILE}"
                script{
                    awsCodeBuild    projectName: "${CODEBUILD_PROJECT}",
                                    buildSpecFile: "${BUILDSPEC_FILE}",
                                    envVariables: "[ { ENVIRONMENT, $params.ENVIRONMENT }, { GIT_URL, $GIT_URL }, { GIT_BRANCH, $GIT_BRANCH }, { GIT_COMMIT, $GIT_COMMIT }, { IMAGE_ID, $params.IMAGE_ID } ]",
                                    credentialsType: 'keys',
                                    region: 'us-east-1',
                                    sourceControlType: 'jenkins'
                    }
                }
        } //end stage Build
        stage('Deploy') {
            environment { 
                BUILDSPEC_FILE = 'etc/infra/pipelines/deploystep.yaml' 
            }
            steps {
                echo "### starting stage Deploy ###"
                echo "CodeBuild project name: ${CODEBUILD_PROJECT}"
                echo "BUILDSPEC_FILE: ${BUILDSPEC_FILE}"
                script{
                    awsCodeBuild    projectName: "${CODEBUILD_PROJECT}",
                                    buildSpecFile: "${BUILDSPEC_FILE}",
                                    envVariables: "[ { ENVIRONMENT, $params.ENVIRONMENT }, { GIT_URL, $GIT_URL }, { GIT_BRANCH, $GIT_BRANCH }, { GIT_COMMIT, $GIT_COMMIT }, { IMAGE_ID, $params.IMAGE_ID } ]",
                                    credentialsType: 'keys',
                                    region: 'us-east-1',
                                    sourceControlType: 'jenkins'
                    }
                }
        } //end stage Deploy
    } // end Stages
//   }
}